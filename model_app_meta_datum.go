/*
 * Sources
 *
 * Sources
 *
 * API version: 3.1.0
 * Contact: support@redhat.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sourcesapi

import (
	"encoding/json"
	"time"
)

// AppMetaDatum struct for AppMetaDatum
type AppMetaDatum struct {
	CreatedAt *time.Time `json:"created_at,omitempty"`
	ApplicationTypeId *string `json:"application_type_id,omitempty"`
	// ID of the resource
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Payload *map[string]interface{} `json:"payload,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// NewAppMetaDatum instantiates a new AppMetaDatum object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppMetaDatum() *AppMetaDatum {
	this := AppMetaDatum{}
	return &this
}

// NewAppMetaDatumWithDefaults instantiates a new AppMetaDatum object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppMetaDatumWithDefaults() *AppMetaDatum {
	this := AppMetaDatum{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *AppMetaDatum) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppMetaDatum) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *AppMetaDatum) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *AppMetaDatum) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetApplicationTypeId returns the ApplicationTypeId field value if set, zero value otherwise.
func (o *AppMetaDatum) GetApplicationTypeId() string {
	if o == nil || o.ApplicationTypeId == nil {
		var ret string
		return ret
	}
	return *o.ApplicationTypeId
}

// GetApplicationTypeIdOk returns a tuple with the ApplicationTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppMetaDatum) GetApplicationTypeIdOk() (*string, bool) {
	if o == nil || o.ApplicationTypeId == nil {
		return nil, false
	}
	return o.ApplicationTypeId, true
}

// HasApplicationTypeId returns a boolean if a field has been set.
func (o *AppMetaDatum) HasApplicationTypeId() bool {
	if o != nil && o.ApplicationTypeId != nil {
		return true
	}

	return false
}

// SetApplicationTypeId gets a reference to the given string and assigns it to the ApplicationTypeId field.
func (o *AppMetaDatum) SetApplicationTypeId(v string) {
	o.ApplicationTypeId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AppMetaDatum) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppMetaDatum) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AppMetaDatum) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AppMetaDatum) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AppMetaDatum) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppMetaDatum) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AppMetaDatum) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AppMetaDatum) SetName(v string) {
	o.Name = &v
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *AppMetaDatum) GetPayload() map[string]interface{} {
	if o == nil || o.Payload == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppMetaDatum) GetPayloadOk() (*map[string]interface{}, bool) {
	if o == nil || o.Payload == nil {
		return nil, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *AppMetaDatum) HasPayload() bool {
	if o != nil && o.Payload != nil {
		return true
	}

	return false
}

// SetPayload gets a reference to the given map[string]interface{} and assigns it to the Payload field.
func (o *AppMetaDatum) SetPayload(v map[string]interface{}) {
	o.Payload = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *AppMetaDatum) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppMetaDatum) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *AppMetaDatum) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *AppMetaDatum) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o AppMetaDatum) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.ApplicationTypeId != nil {
		toSerialize["application_type_id"] = o.ApplicationTypeId
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Payload != nil {
		toSerialize["payload"] = o.Payload
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableAppMetaDatum struct {
	value *AppMetaDatum
	isSet bool
}

func (v NullableAppMetaDatum) Get() *AppMetaDatum {
	return v.value
}

func (v *NullableAppMetaDatum) Set(val *AppMetaDatum) {
	v.value = val
	v.isSet = true
}

func (v NullableAppMetaDatum) IsSet() bool {
	return v.isSet
}

func (v *NullableAppMetaDatum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppMetaDatum(val *AppMetaDatum) *NullableAppMetaDatum {
	return &NullableAppMetaDatum{value: val, isSet: true}
}

func (v NullableAppMetaDatum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppMetaDatum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


