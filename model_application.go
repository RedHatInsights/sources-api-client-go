/*
 * Sources
 *
 * Sources
 *
 * API version: 3.0.0
 * Contact: support@redhat.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sourcesapi

import (
	"encoding/json"
	"time"
)

// Application struct for Application
type Application struct {
	// ID of the resource
	ApplicationTypeId *string `json:"application_type_id,omitempty"`
	AvailabilityStatus *string `json:"availability_status,omitempty"`
	AvailabilityStatusError *string `json:"availability_status_error,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	Extra *map[string]interface{} `json:"extra,omitempty"`
	// ID of the resource
	Id *string `json:"id,omitempty"`
	LastAvailableAt *time.Time `json:"last_available_at,omitempty"`
	LastCheckedAt *time.Time `json:"last_checked_at,omitempty"`
	// ID of the resource
	SourceId *string `json:"source_id,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// NewApplication instantiates a new Application object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplication() *Application {
	this := Application{}
	return &this
}

// NewApplicationWithDefaults instantiates a new Application object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationWithDefaults() *Application {
	this := Application{}
	return &this
}

// GetApplicationTypeId returns the ApplicationTypeId field value if set, zero value otherwise.
func (o *Application) GetApplicationTypeId() string {
	if o == nil || o.ApplicationTypeId == nil {
		var ret string
		return ret
	}
	return *o.ApplicationTypeId
}

// GetApplicationTypeIdOk returns a tuple with the ApplicationTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Application) GetApplicationTypeIdOk() (*string, bool) {
	if o == nil || o.ApplicationTypeId == nil {
		return nil, false
	}
	return o.ApplicationTypeId, true
}

// HasApplicationTypeId returns a boolean if a field has been set.
func (o *Application) HasApplicationTypeId() bool {
	if o != nil && o.ApplicationTypeId != nil {
		return true
	}

	return false
}

// SetApplicationTypeId gets a reference to the given string and assigns it to the ApplicationTypeId field.
func (o *Application) SetApplicationTypeId(v string) {
	o.ApplicationTypeId = &v
}

// GetAvailabilityStatus returns the AvailabilityStatus field value if set, zero value otherwise.
func (o *Application) GetAvailabilityStatus() string {
	if o == nil || o.AvailabilityStatus == nil {
		var ret string
		return ret
	}
	return *o.AvailabilityStatus
}

// GetAvailabilityStatusOk returns a tuple with the AvailabilityStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Application) GetAvailabilityStatusOk() (*string, bool) {
	if o == nil || o.AvailabilityStatus == nil {
		return nil, false
	}
	return o.AvailabilityStatus, true
}

// HasAvailabilityStatus returns a boolean if a field has been set.
func (o *Application) HasAvailabilityStatus() bool {
	if o != nil && o.AvailabilityStatus != nil {
		return true
	}

	return false
}

// SetAvailabilityStatus gets a reference to the given string and assigns it to the AvailabilityStatus field.
func (o *Application) SetAvailabilityStatus(v string) {
	o.AvailabilityStatus = &v
}

// GetAvailabilityStatusError returns the AvailabilityStatusError field value if set, zero value otherwise.
func (o *Application) GetAvailabilityStatusError() string {
	if o == nil || o.AvailabilityStatusError == nil {
		var ret string
		return ret
	}
	return *o.AvailabilityStatusError
}

// GetAvailabilityStatusErrorOk returns a tuple with the AvailabilityStatusError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Application) GetAvailabilityStatusErrorOk() (*string, bool) {
	if o == nil || o.AvailabilityStatusError == nil {
		return nil, false
	}
	return o.AvailabilityStatusError, true
}

// HasAvailabilityStatusError returns a boolean if a field has been set.
func (o *Application) HasAvailabilityStatusError() bool {
	if o != nil && o.AvailabilityStatusError != nil {
		return true
	}

	return false
}

// SetAvailabilityStatusError gets a reference to the given string and assigns it to the AvailabilityStatusError field.
func (o *Application) SetAvailabilityStatusError(v string) {
	o.AvailabilityStatusError = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Application) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Application) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Application) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *Application) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetExtra returns the Extra field value if set, zero value otherwise.
func (o *Application) GetExtra() map[string]interface{} {
	if o == nil || o.Extra == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Extra
}

// GetExtraOk returns a tuple with the Extra field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Application) GetExtraOk() (*map[string]interface{}, bool) {
	if o == nil || o.Extra == nil {
		return nil, false
	}
	return o.Extra, true
}

// HasExtra returns a boolean if a field has been set.
func (o *Application) HasExtra() bool {
	if o != nil && o.Extra != nil {
		return true
	}

	return false
}

// SetExtra gets a reference to the given map[string]interface{} and assigns it to the Extra field.
func (o *Application) SetExtra(v map[string]interface{}) {
	o.Extra = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Application) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Application) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Application) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Application) SetId(v string) {
	o.Id = &v
}

// GetLastAvailableAt returns the LastAvailableAt field value if set, zero value otherwise.
func (o *Application) GetLastAvailableAt() time.Time {
	if o == nil || o.LastAvailableAt == nil {
		var ret time.Time
		return ret
	}
	return *o.LastAvailableAt
}

// GetLastAvailableAtOk returns a tuple with the LastAvailableAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Application) GetLastAvailableAtOk() (*time.Time, bool) {
	if o == nil || o.LastAvailableAt == nil {
		return nil, false
	}
	return o.LastAvailableAt, true
}

// HasLastAvailableAt returns a boolean if a field has been set.
func (o *Application) HasLastAvailableAt() bool {
	if o != nil && o.LastAvailableAt != nil {
		return true
	}

	return false
}

// SetLastAvailableAt gets a reference to the given time.Time and assigns it to the LastAvailableAt field.
func (o *Application) SetLastAvailableAt(v time.Time) {
	o.LastAvailableAt = &v
}

// GetLastCheckedAt returns the LastCheckedAt field value if set, zero value otherwise.
func (o *Application) GetLastCheckedAt() time.Time {
	if o == nil || o.LastCheckedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.LastCheckedAt
}

// GetLastCheckedAtOk returns a tuple with the LastCheckedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Application) GetLastCheckedAtOk() (*time.Time, bool) {
	if o == nil || o.LastCheckedAt == nil {
		return nil, false
	}
	return o.LastCheckedAt, true
}

// HasLastCheckedAt returns a boolean if a field has been set.
func (o *Application) HasLastCheckedAt() bool {
	if o != nil && o.LastCheckedAt != nil {
		return true
	}

	return false
}

// SetLastCheckedAt gets a reference to the given time.Time and assigns it to the LastCheckedAt field.
func (o *Application) SetLastCheckedAt(v time.Time) {
	o.LastCheckedAt = &v
}

// GetSourceId returns the SourceId field value if set, zero value otherwise.
func (o *Application) GetSourceId() string {
	if o == nil || o.SourceId == nil {
		var ret string
		return ret
	}
	return *o.SourceId
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Application) GetSourceIdOk() (*string, bool) {
	if o == nil || o.SourceId == nil {
		return nil, false
	}
	return o.SourceId, true
}

// HasSourceId returns a boolean if a field has been set.
func (o *Application) HasSourceId() bool {
	if o != nil && o.SourceId != nil {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given string and assigns it to the SourceId field.
func (o *Application) SetSourceId(v string) {
	o.SourceId = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *Application) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Application) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Application) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *Application) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o Application) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApplicationTypeId != nil {
		toSerialize["application_type_id"] = o.ApplicationTypeId
	}
	if o.AvailabilityStatus != nil {
		toSerialize["availability_status"] = o.AvailabilityStatus
	}
	if o.AvailabilityStatusError != nil {
		toSerialize["availability_status_error"] = o.AvailabilityStatusError
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.Extra != nil {
		toSerialize["extra"] = o.Extra
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.LastAvailableAt != nil {
		toSerialize["last_available_at"] = o.LastAvailableAt
	}
	if o.LastCheckedAt != nil {
		toSerialize["last_checked_at"] = o.LastCheckedAt
	}
	if o.SourceId != nil {
		toSerialize["source_id"] = o.SourceId
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableApplication struct {
	value *Application
	isSet bool
}

func (v NullableApplication) Get() *Application {
	return v.value
}

func (v *NullableApplication) Set(val *Application) {
	v.value = val
	v.isSet = true
}

func (v NullableApplication) IsSet() bool {
	return v.isSet
}

func (v *NullableApplication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplication(val *Application) *NullableApplication {
	return &NullableApplication{value: val, isSet: true}
}

func (v NullableApplication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


