/*
 * Sources
 *
 * Sources
 *
 * API version: 3.0.0
 * Contact: support@redhat.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sourcesapi

import (
	"encoding/json"
	"time"
)

// Endpoint struct for Endpoint
type Endpoint struct {
	AvailabilityStatus *string `json:"availability_status,omitempty"`
	AvailabilityStatusError *string `json:"availability_status_error,omitempty"`
	// Optional X.509 Certificate Authority
	CertificateAuthority *string `json:"certificate_authority,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	Default *bool `json:"default,omitempty"`
	// URI host component
	Host *string `json:"host,omitempty"`
	// ID of the resource
	Id *string `json:"id,omitempty"`
	LastAvailableAt *time.Time `json:"last_available_at,omitempty"`
	LastCheckedAt *time.Time `json:"last_checked_at,omitempty"`
	// URI path component
	Path *string `json:"path,omitempty"`
	// URI port component
	Port *int32 `json:"port,omitempty"`
	// Identifier of a receptor node
	ReceptorNode *string `json:"receptor_node,omitempty"`
	Role *string `json:"role,omitempty"`
	// URI scheme component
	Scheme *string `json:"scheme,omitempty"`
	// ID of the resource
	SourceId *string `json:"source_id,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// Should SSL be verified
	VerifySsl *bool `json:"verify_ssl,omitempty"`
}

// NewEndpoint instantiates a new Endpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndpoint() *Endpoint {
	this := Endpoint{}
	return &this
}

// NewEndpointWithDefaults instantiates a new Endpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndpointWithDefaults() *Endpoint {
	this := Endpoint{}
	return &this
}

// GetAvailabilityStatus returns the AvailabilityStatus field value if set, zero value otherwise.
func (o *Endpoint) GetAvailabilityStatus() string {
	if o == nil || o.AvailabilityStatus == nil {
		var ret string
		return ret
	}
	return *o.AvailabilityStatus
}

// GetAvailabilityStatusOk returns a tuple with the AvailabilityStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetAvailabilityStatusOk() (*string, bool) {
	if o == nil || o.AvailabilityStatus == nil {
		return nil, false
	}
	return o.AvailabilityStatus, true
}

// HasAvailabilityStatus returns a boolean if a field has been set.
func (o *Endpoint) HasAvailabilityStatus() bool {
	if o != nil && o.AvailabilityStatus != nil {
		return true
	}

	return false
}

// SetAvailabilityStatus gets a reference to the given string and assigns it to the AvailabilityStatus field.
func (o *Endpoint) SetAvailabilityStatus(v string) {
	o.AvailabilityStatus = &v
}

// GetAvailabilityStatusError returns the AvailabilityStatusError field value if set, zero value otherwise.
func (o *Endpoint) GetAvailabilityStatusError() string {
	if o == nil || o.AvailabilityStatusError == nil {
		var ret string
		return ret
	}
	return *o.AvailabilityStatusError
}

// GetAvailabilityStatusErrorOk returns a tuple with the AvailabilityStatusError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetAvailabilityStatusErrorOk() (*string, bool) {
	if o == nil || o.AvailabilityStatusError == nil {
		return nil, false
	}
	return o.AvailabilityStatusError, true
}

// HasAvailabilityStatusError returns a boolean if a field has been set.
func (o *Endpoint) HasAvailabilityStatusError() bool {
	if o != nil && o.AvailabilityStatusError != nil {
		return true
	}

	return false
}

// SetAvailabilityStatusError gets a reference to the given string and assigns it to the AvailabilityStatusError field.
func (o *Endpoint) SetAvailabilityStatusError(v string) {
	o.AvailabilityStatusError = &v
}

// GetCertificateAuthority returns the CertificateAuthority field value if set, zero value otherwise.
func (o *Endpoint) GetCertificateAuthority() string {
	if o == nil || o.CertificateAuthority == nil {
		var ret string
		return ret
	}
	return *o.CertificateAuthority
}

// GetCertificateAuthorityOk returns a tuple with the CertificateAuthority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetCertificateAuthorityOk() (*string, bool) {
	if o == nil || o.CertificateAuthority == nil {
		return nil, false
	}
	return o.CertificateAuthority, true
}

// HasCertificateAuthority returns a boolean if a field has been set.
func (o *Endpoint) HasCertificateAuthority() bool {
	if o != nil && o.CertificateAuthority != nil {
		return true
	}

	return false
}

// SetCertificateAuthority gets a reference to the given string and assigns it to the CertificateAuthority field.
func (o *Endpoint) SetCertificateAuthority(v string) {
	o.CertificateAuthority = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Endpoint) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Endpoint) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *Endpoint) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *Endpoint) GetDefault() bool {
	if o == nil || o.Default == nil {
		var ret bool
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetDefaultOk() (*bool, bool) {
	if o == nil || o.Default == nil {
		return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *Endpoint) HasDefault() bool {
	if o != nil && o.Default != nil {
		return true
	}

	return false
}

// SetDefault gets a reference to the given bool and assigns it to the Default field.
func (o *Endpoint) SetDefault(v bool) {
	o.Default = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *Endpoint) GetHost() string {
	if o == nil || o.Host == nil {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetHostOk() (*string, bool) {
	if o == nil || o.Host == nil {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *Endpoint) HasHost() bool {
	if o != nil && o.Host != nil {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *Endpoint) SetHost(v string) {
	o.Host = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Endpoint) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Endpoint) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Endpoint) SetId(v string) {
	o.Id = &v
}

// GetLastAvailableAt returns the LastAvailableAt field value if set, zero value otherwise.
func (o *Endpoint) GetLastAvailableAt() time.Time {
	if o == nil || o.LastAvailableAt == nil {
		var ret time.Time
		return ret
	}
	return *o.LastAvailableAt
}

// GetLastAvailableAtOk returns a tuple with the LastAvailableAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetLastAvailableAtOk() (*time.Time, bool) {
	if o == nil || o.LastAvailableAt == nil {
		return nil, false
	}
	return o.LastAvailableAt, true
}

// HasLastAvailableAt returns a boolean if a field has been set.
func (o *Endpoint) HasLastAvailableAt() bool {
	if o != nil && o.LastAvailableAt != nil {
		return true
	}

	return false
}

// SetLastAvailableAt gets a reference to the given time.Time and assigns it to the LastAvailableAt field.
func (o *Endpoint) SetLastAvailableAt(v time.Time) {
	o.LastAvailableAt = &v
}

// GetLastCheckedAt returns the LastCheckedAt field value if set, zero value otherwise.
func (o *Endpoint) GetLastCheckedAt() time.Time {
	if o == nil || o.LastCheckedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.LastCheckedAt
}

// GetLastCheckedAtOk returns a tuple with the LastCheckedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetLastCheckedAtOk() (*time.Time, bool) {
	if o == nil || o.LastCheckedAt == nil {
		return nil, false
	}
	return o.LastCheckedAt, true
}

// HasLastCheckedAt returns a boolean if a field has been set.
func (o *Endpoint) HasLastCheckedAt() bool {
	if o != nil && o.LastCheckedAt != nil {
		return true
	}

	return false
}

// SetLastCheckedAt gets a reference to the given time.Time and assigns it to the LastCheckedAt field.
func (o *Endpoint) SetLastCheckedAt(v time.Time) {
	o.LastCheckedAt = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *Endpoint) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *Endpoint) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *Endpoint) SetPath(v string) {
	o.Path = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *Endpoint) GetPort() int32 {
	if o == nil || o.Port == nil {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetPortOk() (*int32, bool) {
	if o == nil || o.Port == nil {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *Endpoint) HasPort() bool {
	if o != nil && o.Port != nil {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *Endpoint) SetPort(v int32) {
	o.Port = &v
}

// GetReceptorNode returns the ReceptorNode field value if set, zero value otherwise.
func (o *Endpoint) GetReceptorNode() string {
	if o == nil || o.ReceptorNode == nil {
		var ret string
		return ret
	}
	return *o.ReceptorNode
}

// GetReceptorNodeOk returns a tuple with the ReceptorNode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetReceptorNodeOk() (*string, bool) {
	if o == nil || o.ReceptorNode == nil {
		return nil, false
	}
	return o.ReceptorNode, true
}

// HasReceptorNode returns a boolean if a field has been set.
func (o *Endpoint) HasReceptorNode() bool {
	if o != nil && o.ReceptorNode != nil {
		return true
	}

	return false
}

// SetReceptorNode gets a reference to the given string and assigns it to the ReceptorNode field.
func (o *Endpoint) SetReceptorNode(v string) {
	o.ReceptorNode = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *Endpoint) GetRole() string {
	if o == nil || o.Role == nil {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetRoleOk() (*string, bool) {
	if o == nil || o.Role == nil {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *Endpoint) HasRole() bool {
	if o != nil && o.Role != nil {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *Endpoint) SetRole(v string) {
	o.Role = &v
}

// GetScheme returns the Scheme field value if set, zero value otherwise.
func (o *Endpoint) GetScheme() string {
	if o == nil || o.Scheme == nil {
		var ret string
		return ret
	}
	return *o.Scheme
}

// GetSchemeOk returns a tuple with the Scheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetSchemeOk() (*string, bool) {
	if o == nil || o.Scheme == nil {
		return nil, false
	}
	return o.Scheme, true
}

// HasScheme returns a boolean if a field has been set.
func (o *Endpoint) HasScheme() bool {
	if o != nil && o.Scheme != nil {
		return true
	}

	return false
}

// SetScheme gets a reference to the given string and assigns it to the Scheme field.
func (o *Endpoint) SetScheme(v string) {
	o.Scheme = &v
}

// GetSourceId returns the SourceId field value if set, zero value otherwise.
func (o *Endpoint) GetSourceId() string {
	if o == nil || o.SourceId == nil {
		var ret string
		return ret
	}
	return *o.SourceId
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetSourceIdOk() (*string, bool) {
	if o == nil || o.SourceId == nil {
		return nil, false
	}
	return o.SourceId, true
}

// HasSourceId returns a boolean if a field has been set.
func (o *Endpoint) HasSourceId() bool {
	if o != nil && o.SourceId != nil {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given string and assigns it to the SourceId field.
func (o *Endpoint) SetSourceId(v string) {
	o.SourceId = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *Endpoint) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Endpoint) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *Endpoint) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetVerifySsl returns the VerifySsl field value if set, zero value otherwise.
func (o *Endpoint) GetVerifySsl() bool {
	if o == nil || o.VerifySsl == nil {
		var ret bool
		return ret
	}
	return *o.VerifySsl
}

// GetVerifySslOk returns a tuple with the VerifySsl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetVerifySslOk() (*bool, bool) {
	if o == nil || o.VerifySsl == nil {
		return nil, false
	}
	return o.VerifySsl, true
}

// HasVerifySsl returns a boolean if a field has been set.
func (o *Endpoint) HasVerifySsl() bool {
	if o != nil && o.VerifySsl != nil {
		return true
	}

	return false
}

// SetVerifySsl gets a reference to the given bool and assigns it to the VerifySsl field.
func (o *Endpoint) SetVerifySsl(v bool) {
	o.VerifySsl = &v
}

func (o Endpoint) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AvailabilityStatus != nil {
		toSerialize["availability_status"] = o.AvailabilityStatus
	}
	if o.AvailabilityStatusError != nil {
		toSerialize["availability_status_error"] = o.AvailabilityStatusError
	}
	if o.CertificateAuthority != nil {
		toSerialize["certificate_authority"] = o.CertificateAuthority
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.Default != nil {
		toSerialize["default"] = o.Default
	}
	if o.Host != nil {
		toSerialize["host"] = o.Host
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.LastAvailableAt != nil {
		toSerialize["last_available_at"] = o.LastAvailableAt
	}
	if o.LastCheckedAt != nil {
		toSerialize["last_checked_at"] = o.LastCheckedAt
	}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	if o.Port != nil {
		toSerialize["port"] = o.Port
	}
	if o.ReceptorNode != nil {
		toSerialize["receptor_node"] = o.ReceptorNode
	}
	if o.Role != nil {
		toSerialize["role"] = o.Role
	}
	if o.Scheme != nil {
		toSerialize["scheme"] = o.Scheme
	}
	if o.SourceId != nil {
		toSerialize["source_id"] = o.SourceId
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.VerifySsl != nil {
		toSerialize["verify_ssl"] = o.VerifySsl
	}
	return json.Marshal(toSerialize)
}

type NullableEndpoint struct {
	value *Endpoint
	isSet bool
}

func (v NullableEndpoint) Get() *Endpoint {
	return v.value
}

func (v *NullableEndpoint) Set(val *Endpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndpoint(val *Endpoint) *NullableEndpoint {
	return &NullableEndpoint{value: val, isSet: true}
}

func (v NullableEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


