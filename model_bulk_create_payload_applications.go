/*
 * Sources
 *
 * Sources
 *
 * API version: 3.1.0
 * Contact: support@redhat.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sourcesapi

import (
	"encoding/json"
)

// BulkCreatePayloadApplications struct for BulkCreatePayloadApplications
type BulkCreatePayloadApplications struct {
	ApplicationTypeName *string `json:"application_type_name,omitempty"`
	ApplicationTypeId *string `json:"application_type_id,omitempty"`
	Extra *map[string]interface{} `json:"extra,omitempty"`
	SourceName *string `json:"source_name,omitempty"`
}

// NewBulkCreatePayloadApplications instantiates a new BulkCreatePayloadApplications object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkCreatePayloadApplications() *BulkCreatePayloadApplications {
	this := BulkCreatePayloadApplications{}
	return &this
}

// NewBulkCreatePayloadApplicationsWithDefaults instantiates a new BulkCreatePayloadApplications object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkCreatePayloadApplicationsWithDefaults() *BulkCreatePayloadApplications {
	this := BulkCreatePayloadApplications{}
	return &this
}

// GetApplicationTypeName returns the ApplicationTypeName field value if set, zero value otherwise.
func (o *BulkCreatePayloadApplications) GetApplicationTypeName() string {
	if o == nil || o.ApplicationTypeName == nil {
		var ret string
		return ret
	}
	return *o.ApplicationTypeName
}

// GetApplicationTypeNameOk returns a tuple with the ApplicationTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkCreatePayloadApplications) GetApplicationTypeNameOk() (*string, bool) {
	if o == nil || o.ApplicationTypeName == nil {
		return nil, false
	}
	return o.ApplicationTypeName, true
}

// HasApplicationTypeName returns a boolean if a field has been set.
func (o *BulkCreatePayloadApplications) HasApplicationTypeName() bool {
	if o != nil && o.ApplicationTypeName != nil {
		return true
	}

	return false
}

// SetApplicationTypeName gets a reference to the given string and assigns it to the ApplicationTypeName field.
func (o *BulkCreatePayloadApplications) SetApplicationTypeName(v string) {
	o.ApplicationTypeName = &v
}

// GetApplicationTypeId returns the ApplicationTypeId field value if set, zero value otherwise.
func (o *BulkCreatePayloadApplications) GetApplicationTypeId() string {
	if o == nil || o.ApplicationTypeId == nil {
		var ret string
		return ret
	}
	return *o.ApplicationTypeId
}

// GetApplicationTypeIdOk returns a tuple with the ApplicationTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkCreatePayloadApplications) GetApplicationTypeIdOk() (*string, bool) {
	if o == nil || o.ApplicationTypeId == nil {
		return nil, false
	}
	return o.ApplicationTypeId, true
}

// HasApplicationTypeId returns a boolean if a field has been set.
func (o *BulkCreatePayloadApplications) HasApplicationTypeId() bool {
	if o != nil && o.ApplicationTypeId != nil {
		return true
	}

	return false
}

// SetApplicationTypeId gets a reference to the given string and assigns it to the ApplicationTypeId field.
func (o *BulkCreatePayloadApplications) SetApplicationTypeId(v string) {
	o.ApplicationTypeId = &v
}

// GetExtra returns the Extra field value if set, zero value otherwise.
func (o *BulkCreatePayloadApplications) GetExtra() map[string]interface{} {
	if o == nil || o.Extra == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Extra
}

// GetExtraOk returns a tuple with the Extra field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkCreatePayloadApplications) GetExtraOk() (*map[string]interface{}, bool) {
	if o == nil || o.Extra == nil {
		return nil, false
	}
	return o.Extra, true
}

// HasExtra returns a boolean if a field has been set.
func (o *BulkCreatePayloadApplications) HasExtra() bool {
	if o != nil && o.Extra != nil {
		return true
	}

	return false
}

// SetExtra gets a reference to the given map[string]interface{} and assigns it to the Extra field.
func (o *BulkCreatePayloadApplications) SetExtra(v map[string]interface{}) {
	o.Extra = &v
}

// GetSourceName returns the SourceName field value if set, zero value otherwise.
func (o *BulkCreatePayloadApplications) GetSourceName() string {
	if o == nil || o.SourceName == nil {
		var ret string
		return ret
	}
	return *o.SourceName
}

// GetSourceNameOk returns a tuple with the SourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkCreatePayloadApplications) GetSourceNameOk() (*string, bool) {
	if o == nil || o.SourceName == nil {
		return nil, false
	}
	return o.SourceName, true
}

// HasSourceName returns a boolean if a field has been set.
func (o *BulkCreatePayloadApplications) HasSourceName() bool {
	if o != nil && o.SourceName != nil {
		return true
	}

	return false
}

// SetSourceName gets a reference to the given string and assigns it to the SourceName field.
func (o *BulkCreatePayloadApplications) SetSourceName(v string) {
	o.SourceName = &v
}

func (o BulkCreatePayloadApplications) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApplicationTypeName != nil {
		toSerialize["application_type_name"] = o.ApplicationTypeName
	}
	if o.ApplicationTypeId != nil {
		toSerialize["application_type_id"] = o.ApplicationTypeId
	}
	if o.Extra != nil {
		toSerialize["extra"] = o.Extra
	}
	if o.SourceName != nil {
		toSerialize["source_name"] = o.SourceName
	}
	return json.Marshal(toSerialize)
}

type NullableBulkCreatePayloadApplications struct {
	value *BulkCreatePayloadApplications
	isSet bool
}

func (v NullableBulkCreatePayloadApplications) Get() *BulkCreatePayloadApplications {
	return v.value
}

func (v *NullableBulkCreatePayloadApplications) Set(val *BulkCreatePayloadApplications) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkCreatePayloadApplications) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkCreatePayloadApplications) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkCreatePayloadApplications(val *BulkCreatePayloadApplications) *NullableBulkCreatePayloadApplications {
	return &NullableBulkCreatePayloadApplications{value: val, isSet: true}
}

func (v NullableBulkCreatePayloadApplications) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkCreatePayloadApplications) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


