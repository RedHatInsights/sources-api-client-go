/*
 * Sources
 *
 * Sources
 *
 * API version: 3.0.0
 * Contact: support@redhat.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sourcesapi

import (
	"encoding/json"
)

// GraphQLRequest struct for GraphQLRequest
type GraphQLRequest struct {
	// The GraphQL query
	Query string `json:"query"`
	// If the Query contains several named operations, the operationName controls which one should be executed
	OperationName *string `json:"operationName,omitempty"`
	// Optional Query variables
	Variables map[string]interface{} `json:"variables,omitempty"`
}

// NewGraphQLRequest instantiates a new GraphQLRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGraphQLRequest(query string, ) *GraphQLRequest {
	this := GraphQLRequest{}
	this.Query = query
	var operationName string = ""
	this.OperationName = &operationName
	return &this
}

// NewGraphQLRequestWithDefaults instantiates a new GraphQLRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGraphQLRequestWithDefaults() *GraphQLRequest {
	this := GraphQLRequest{}
	var query string = "{}"
	this.Query = query
	var operationName string = ""
	this.OperationName = &operationName
	return &this
}

// GetQuery returns the Query field value
func (o *GraphQLRequest) GetQuery() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Query
}

// GetQueryOk returns a tuple with the Query field value
// and a boolean to check if the value has been set.
func (o *GraphQLRequest) GetQueryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Query, true
}

// SetQuery sets field value
func (o *GraphQLRequest) SetQuery(v string) {
	o.Query = v
}

// GetOperationName returns the OperationName field value if set, zero value otherwise.
func (o *GraphQLRequest) GetOperationName() string {
	if o == nil || o.OperationName == nil {
		var ret string
		return ret
	}
	return *o.OperationName
}

// GetOperationNameOk returns a tuple with the OperationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphQLRequest) GetOperationNameOk() (*string, bool) {
	if o == nil || o.OperationName == nil {
		return nil, false
	}
	return o.OperationName, true
}

// HasOperationName returns a boolean if a field has been set.
func (o *GraphQLRequest) HasOperationName() bool {
	if o != nil && o.OperationName != nil {
		return true
	}

	return false
}

// SetOperationName gets a reference to the given string and assigns it to the OperationName field.
func (o *GraphQLRequest) SetOperationName(v string) {
	o.OperationName = &v
}

// GetVariables returns the Variables field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GraphQLRequest) GetVariables() map[string]interface{} {
	if o == nil  {
		var ret map[string]interface{}
		return ret
	}
	return o.Variables
}

// GetVariablesOk returns a tuple with the Variables field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GraphQLRequest) GetVariablesOk() (*map[string]interface{}, bool) {
	if o == nil || o.Variables == nil {
		return nil, false
	}
	return &o.Variables, true
}

// HasVariables returns a boolean if a field has been set.
func (o *GraphQLRequest) HasVariables() bool {
	if o != nil && o.Variables != nil {
		return true
	}

	return false
}

// SetVariables gets a reference to the given map[string]interface{} and assigns it to the Variables field.
func (o *GraphQLRequest) SetVariables(v map[string]interface{}) {
	o.Variables = v
}

func (o GraphQLRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["query"] = o.Query
	}
	if o.OperationName != nil {
		toSerialize["operationName"] = o.OperationName
	}
	if o.Variables != nil {
		toSerialize["variables"] = o.Variables
	}
	return json.Marshal(toSerialize)
}

type NullableGraphQLRequest struct {
	value *GraphQLRequest
	isSet bool
}

func (v NullableGraphQLRequest) Get() *GraphQLRequest {
	return v.value
}

func (v *NullableGraphQLRequest) Set(val *GraphQLRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGraphQLRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGraphQLRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGraphQLRequest(val *GraphQLRequest) *NullableGraphQLRequest {
	return &NullableGraphQLRequest{value: val, isSet: true}
}

func (v NullableGraphQLRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGraphQLRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


