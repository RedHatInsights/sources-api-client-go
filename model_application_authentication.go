/*
 * Sources
 *
 * Sources
 *
 * API version: 3.1.0
 * Contact: support@redhat.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sourcesapi

import (
	"encoding/json"
	"time"
)

// ApplicationAuthentication struct for ApplicationAuthentication
type ApplicationAuthentication struct {
	// ID of the resource
	ApplicationId *string `json:"application_id,omitempty"`
	// ID of the resource
	AuthenticationId *string `json:"authentication_id,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// ID of the resource
	Id *string `json:"id,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// NewApplicationAuthentication instantiates a new ApplicationAuthentication object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationAuthentication() *ApplicationAuthentication {
	this := ApplicationAuthentication{}
	return &this
}

// NewApplicationAuthenticationWithDefaults instantiates a new ApplicationAuthentication object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationAuthenticationWithDefaults() *ApplicationAuthentication {
	this := ApplicationAuthentication{}
	return &this
}

// GetApplicationId returns the ApplicationId field value if set, zero value otherwise.
func (o *ApplicationAuthentication) GetApplicationId() string {
	if o == nil || o.ApplicationId == nil {
		var ret string
		return ret
	}
	return *o.ApplicationId
}

// GetApplicationIdOk returns a tuple with the ApplicationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAuthentication) GetApplicationIdOk() (*string, bool) {
	if o == nil || o.ApplicationId == nil {
		return nil, false
	}
	return o.ApplicationId, true
}

// HasApplicationId returns a boolean if a field has been set.
func (o *ApplicationAuthentication) HasApplicationId() bool {
	if o != nil && o.ApplicationId != nil {
		return true
	}

	return false
}

// SetApplicationId gets a reference to the given string and assigns it to the ApplicationId field.
func (o *ApplicationAuthentication) SetApplicationId(v string) {
	o.ApplicationId = &v
}

// GetAuthenticationId returns the AuthenticationId field value if set, zero value otherwise.
func (o *ApplicationAuthentication) GetAuthenticationId() string {
	if o == nil || o.AuthenticationId == nil {
		var ret string
		return ret
	}
	return *o.AuthenticationId
}

// GetAuthenticationIdOk returns a tuple with the AuthenticationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAuthentication) GetAuthenticationIdOk() (*string, bool) {
	if o == nil || o.AuthenticationId == nil {
		return nil, false
	}
	return o.AuthenticationId, true
}

// HasAuthenticationId returns a boolean if a field has been set.
func (o *ApplicationAuthentication) HasAuthenticationId() bool {
	if o != nil && o.AuthenticationId != nil {
		return true
	}

	return false
}

// SetAuthenticationId gets a reference to the given string and assigns it to the AuthenticationId field.
func (o *ApplicationAuthentication) SetAuthenticationId(v string) {
	o.AuthenticationId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ApplicationAuthentication) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAuthentication) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ApplicationAuthentication) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ApplicationAuthentication) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApplicationAuthentication) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAuthentication) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApplicationAuthentication) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ApplicationAuthentication) SetId(v string) {
	o.Id = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ApplicationAuthentication) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationAuthentication) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ApplicationAuthentication) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *ApplicationAuthentication) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o ApplicationAuthentication) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApplicationId != nil {
		toSerialize["application_id"] = o.ApplicationId
	}
	if o.AuthenticationId != nil {
		toSerialize["authentication_id"] = o.AuthenticationId
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableApplicationAuthentication struct {
	value *ApplicationAuthentication
	isSet bool
}

func (v NullableApplicationAuthentication) Get() *ApplicationAuthentication {
	return v.value
}

func (v *NullableApplicationAuthentication) Set(val *ApplicationAuthentication) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationAuthentication) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationAuthentication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationAuthentication(val *ApplicationAuthentication) *NullableApplicationAuthentication {
	return &NullableApplicationAuthentication{value: val, isSet: true}
}

func (v NullableApplicationAuthentication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationAuthentication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


